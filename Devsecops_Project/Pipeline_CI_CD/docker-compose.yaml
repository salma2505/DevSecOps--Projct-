

services:
  jenkins:
    build: 
    
      context: ./jenkins
      dockerfile: Dockerfile
    image: custom-jenkins:dev
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    
    environment:
      - JENKINS_OPTS=--prefix=/jenkins
    networks:
      - devsecops-net
  k3s:
    image: rancher/k3s:latest
    container_name: k3s
    privileged: true
    ports:
      - "32458:32458"
      - "32459:32459"
      - "6443:6443"
      - "30008:30009"
      - "30006:30006"
      - "30007:30007"
      - "31241:31241"
      - "31237:31237"
      - "31238:31238"
      - "80:80"
      - "30010:30010"
      - "30011:30011"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - k3s_data:/var/lib/rancher/k3s
    environment:
      - K3S_KUBEVIRT_CONTAINER=1
    command: server --disable traefik --disable servicelb
    

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
    depends_on:
      - postgres
    networks:
      - devsecops-net

  postgres:
    image: postgres:latest
    container_name: sonarqube_db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devsecops-net

  zap:
    image: zaproxy/zap-stable
    container_name: zap
    ports:
      - "8081:8080"
    volumes:
      - zap_data:/zap
    networks:
      - devsecops-net
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      
    ports:
      - 9200:9200
    networks:
      - devsecops-net
    deploy:
      resources:
        limits:
          cpus: '1.0'      # Max 1 CPU
          memory: 1g   

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200  
      NODE_OPTIONS: --max-old-space-size=1024
      xpack.encryptedSavedObjects.encryptionKey: UneChaineTresLongueEtSecrete1234567890
      xpack.reporting.encryptionKey: UneAutreChaineTresLongueEtSecrete9876543210
      xpack.security.enabled: false
    ports:
      - 5601:5601
    networks:
      - devsecops-net
    deploy:
      resources:
        limits:
          cpus: '1.0'      # Max 0.5 CPU
          memory: 512m    
  elastalert:
    image: jertel/elastalert2:latest
    volumes:
      - ./elastalert/config.yaml:/opt/elastalert/config.yaml
      - ./elastalert/rules:/opt/elastalert/rules
      - ./elastalert/logs:/opt/elastalert/logs
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    depends_on:
      - elasticsearch
    networks:
      - devsecops-net

  waf:
    image: owasp/modsecurity-crs:nginx
    ports:
      - "8081:80"  # Le WAF Ã©coutera sur localhost:8080
    environment:
      - PROXY_PASS=http://192.168.1.5:30006  # Redirection vers l'app dans K3s
    networks:
      - devsecops-net

  ansible:
    build: 
      context: ./ansible
    container_name: ansible
    user: root
    volumes:    
      - ./ansible/playbooks:/playbooks
    working_dir: /ansible  
    cap_add:
      - NET_ADMIN
    stdin_open: true
    tty: true  
    networks:
      - devsecops-net

networks:
  devsecops-net:
    driver: bridge

volumes:
  jenkins_home:
  k3s_data:
  postgres_data:
  zap_data:
  vault_data:
  splunk-data:

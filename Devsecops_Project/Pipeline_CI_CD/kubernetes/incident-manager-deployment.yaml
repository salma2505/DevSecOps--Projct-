apiVersion: apps/v1
kind: Deployment
metadata:
  name: incident-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: incident-manager
  template:
    metadata:
      labels:
        app: incident-manager
      annotations:
        vault.hashicorp.com/agent-inject: "true"  # Enable Vault Agent injection
        vault.hashicorp.com/role: "incident-manager"  # Vault role to bind the service account to
        vault.hashicorp.com/agent-inject-secret-DATABASE_URL: "secret/incident-manager"  # Path to the secret
        vault.hashicorp.com/agent-inject-template-DATABASE_URL: |
          {{- with secret "secret/incident-manager" -}}
          DATABASE_URL=postgresql://{{ .Data.data.username }}:{{ .Data.data.password }}@incident-db:5432/incidentDB
          {{- end }}
    spec:
      serviceAccountName: vault-auth  # This should match the service account you created
      initContainers:
        - name: run-migrations
          image: salma2505/incidentshield:latest
          command: ["npx", "drizzle-kit", "migrate"]
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: vault-secrets  # This should refer to the Kubernetes Secret injected by Vault
                  key: DATABASE_URL
      containers:
        - name: incident-manager
          image: salma2505/incidentshield:latest
          ports:
            - containerPort: 5000
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: vault-secrets  # This should refer to the Kubernetes Secret injected by Vault
                  key: DATABASE_URL
          volumeMounts:
            - name: vault-secret
              mountPath: /vault/secrets
              readOnly: true
      volumes:
        - name: vault-secret
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: incident-manager-service
spec:
  type: NodePort
  selector:
    app: incident-manager
  ports:
    - port: 5000
      targetPort: 5000
      nodePort: 30000
